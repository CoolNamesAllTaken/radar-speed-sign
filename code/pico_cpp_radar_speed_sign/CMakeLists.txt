cmake_minimum_required(VERSION 3.13)

# Pull in SDK (must be before project)
include(pico_sdk_import.cmake)

project(pico_cpp_radar_speed_sign C CXX ASM)
set(CMAKE_C_STANDARD 11)
set(CMAKE_CXX_STANDARD 17)

# Force -00 optimization during debug to try fixing JLink issues.
# SET(CMAKE_CXX_FLAGS_DEBUG "-O0")
# SET(CMAKE_C_FLAGS_DEBUG "-O0")

if (PICO_SDK_VERSION_STRING VERSION_LESS "1.3.0")
    message(FATAL_ERROR "Raspberry Pi Pico SDK version 1.3.0 (or later) required. Your version is ${PICO_SDK_VERSION_STRING}")
endif()

# Initialize the SDK
pico_sdk_init()

add_compile_options(
    -Wall
    -Wno-format          # int != int32_t as far as the compiler is concerned because gcc has int32_t as long int
    -Wno-unused-function # we have some for the docs that aren't called
    -Wno-maybe-uninitialized
)

# Source files are added with target_sources in subdirectories
add_executable(${PROJECT_NAME} "")

# Set KISS FFT options.
# set(KISSFFT_DATATYPE int16_t)
# set(KISSFFT_OPENMP OFF)
# set(KISSFFT_PKGCONFIG OFF)
# set(KISSFFT_STATIC ON) # Pico does not support shared linking.
# set(KISSFFT_TEST OFF)
# set(KISSFFT_TOOLS OFF)
# set(KISSFFT_USE_ALLOCA OFF)
# set(KISSFFT_TEST OFF)

add_subdirectory(src)
add_subdirectory(inc)

# Add these directories to allow relative include paths from other directories.
target_include_directories(${PROJECT_NAME} PRIVATE 
    inc
    fft
)

add_subdirectory(fft)

# Create C header file with the name <pio program>.pio.h
# pico_generate_pio_header(${PROJECT_NAME}  
#         ${CMAKE_CURRENT_LIST_DIR}/pio/blink.pio 
# )
# pico_generate_pio_header(${PROJECT_NAME}  
#         ${CMAKE_CURRENT_LIST_DIR}/pio/capture.pio       
# )

# Firmware: Pull in Pico library
target_link_libraries(${PROJECT_NAME} 
    pico_stdlib
    pico_float # for math functions
    hardware_pio
    hardware_pwm
    hardware_adc
    hardware_dma
)

# Firmware: Create map/bin/hex file etc
pico_add_extra_outputs(${PROJECT_NAME})

# Set up debug USB
pico_enable_stdio_usb(${PROJECT_NAME} 1) # use USB for standard printing
pico_enable_stdio_uart(${PROJECT_NAME} 0) # disable STDIO UART
