#include "fft_utils.hh"
#include "stdio.h" // for printing

const uint16_t kNumHanningSteps = 1000;
uint16_t kHanningTableUint16[kNumHanningSteps] = {
        0, 0, 1, 3, 5, 8, 12, 16, 21, 26, 32,
        39, 47, 55, 63, 73, 83, 93, 105, 117, 129,
        142, 156, 171, 186, 202, 218, 235, 253, 271, 290,
        310, 330, 351, 372, 395, 417, 441, 465, 489, 515,
        541, 567, 594, 622, 651, 680, 709, 739, 770, 802,
        834, 867, 900, 934, 969, 1004, 1040, 1076, 1113, 1151,
        1189, 1228, 1267, 1307, 1348, 1389, 1430, 1473, 1516, 1559,
        1603, 1648, 1693, 1739, 1786, 1833, 1880, 1929, 1977, 2027,
        2076, 2127, 2178, 2229, 2282, 2334, 2388, 2441, 2496, 2551,
        2606, 2662, 2718, 2776, 2833, 2891, 2950, 3009, 3069, 3129,
        3190, 3251, 3313, 3375, 3438, 3501, 3565, 3630, 3695, 3760,
        3826, 3892, 3959, 4026, 4094, 4163, 4231, 4301, 4370, 4441,
        4511, 4582, 4654, 4726, 4799, 4872, 4945, 5019, 5094, 5168,
        5244, 5319, 5395, 5472, 5549, 5626, 5704, 5783, 5861, 5940,
        6020, 6100, 6180, 6261, 6342, 6424, 6506, 6588, 6671, 6754,
        6837, 6921, 7005, 7090, 7175, 7260, 7346, 7432, 7518, 7605,
        7692, 7780, 7867, 7955, 8044, 8133, 8222, 8311, 8401, 8491,
        8581, 8672, 8763, 8854, 8946, 9038, 9130, 9222, 9315, 9408,
        9501, 9595, 9689, 9783, 9877, 9972, 10067, 10162, 10257, 10353,
        10448, 10545, 10641, 10737, 10834, 10931, 11028, 11126, 11223, 11321,
        11419, 11517, 11616, 11714, 11813, 11912, 12011, 12110, 12210, 12309,
        12409, 12509, 12609, 12710, 12810, 12910, 13011, 13112, 13213, 13314,
        13415, 13516, 13618, 13719, 13821, 13923, 14025, 14126, 14228, 14331,
        14433, 14535, 14637, 14740, 14842, 14945, 15047, 15150, 15253, 15355,
        15458, 15561, 15664, 15766, 15869, 15972, 16075, 16178, 16281, 16384,
        16487, 16590, 16693, 16796, 16899, 17002, 17104, 17207, 17310, 17413,
        17515, 17618, 17721, 17823, 17926, 18028, 18131, 18233, 18335, 18437,
        18540, 18642, 18743, 18845, 18947, 19049, 19150, 19252, 19353, 19454,
        19555, 19656, 19757, 19858, 19958, 20058, 20159, 20259, 20359, 20459,
        20558, 20658, 20757, 20856, 20955, 21054, 21152, 21251, 21349, 21447,
        21545, 21642, 21740, 21837, 21934, 22031, 22127, 22223, 22320, 22415,
        22511, 22606, 22701, 22796, 22891, 22985, 23079, 23173, 23267, 23360,
        23453, 23546, 23638, 23730, 23822, 23914, 24005, 24096, 24187, 24277,
        24367, 24457, 24546, 24635, 24724, 24813, 24901, 24988, 25076, 25163,
        25250, 25336, 25422, 25508, 25593, 25678, 25763, 25847, 25931, 26014,
        26097, 26180, 26262, 26344, 26426, 26507, 26588, 26668, 26748, 26828,
        26907, 26985, 27064, 27142, 27219, 27296, 27373, 27449, 27524, 27600,
        27674, 27749, 27823, 27896, 27969, 28042, 28114, 28186, 28257, 28327,
        28398, 28467, 28537, 28605, 28674, 28742, 28809, 28876, 28942, 29008,
        29073, 29138, 29203, 29267, 29330, 29393, 29455, 29517, 29578, 29639,
        29699, 29759, 29818, 29877, 29935, 29992, 30050, 30106, 30162, 30217,
        30272, 30327, 30380, 30434, 30486, 30539, 30590, 30641, 30692, 30741,
        30791, 30839, 30888, 30935, 30982, 31029, 31075, 31120, 31165, 31209,
        31252, 31295, 31338, 31379, 31420, 31461, 31501, 31540, 31579, 31617,
        31655, 31692, 31728, 31764, 31799, 31834, 31868, 31901, 31934, 31966,
        31998, 32029, 32059, 32088, 32117, 32146, 32174, 32201, 32227, 32253,
        32279, 32303, 32327, 32351, 32373, 32396, 32417, 32438, 32458, 32478,
        32497, 32515, 32533, 32550, 32566, 32582, 32597, 32612, 32626, 32639,
        32651, 32663, 32675, 32685, 32695, 32705, 32713, 32721, 32729, 32736,
        32742, 32747, 32752, 32756, 32760, 32763, 32765, 32767, 32768, 32768,
        32768, 32767, 32765, 32763, 32760, 32756, 32752, 32747, 32742, 32736,
        32729, 32721, 32713, 32705, 32695, 32685, 32675, 32663, 32651, 32639,
        32626, 32612, 32597, 32582, 32566, 32550, 32533, 32515, 32497, 32478,
        32458, 32438, 32417, 32396, 32373, 32351, 32327, 32303, 32279, 32253,
        32227, 32201, 32174, 32146, 32117, 32088, 32059, 32029, 31998, 31966,
        31934, 31901, 31868, 31834, 31799, 31764, 31728, 31692, 31655, 31617,
        31579, 31540, 31501, 31461, 31420, 31379, 31338, 31295, 31252, 31209,
        31165, 31120, 31075, 31029, 30982, 30935, 30888, 30839, 30791, 30741,
        30692, 30641, 30590, 30539, 30486, 30434, 30380, 30327, 30272, 30217,
        30162, 30106, 30050, 29992, 29935, 29877, 29818, 29759, 29699, 29639,
        29578, 29517, 29455, 29393, 29330, 29267, 29203, 29138, 29073, 29008,
        28942, 28876, 28809, 28742, 28674, 28605, 28537, 28467, 28398, 28327,
        28257, 28186, 28114, 28042, 27969, 27896, 27823, 27749, 27674, 27600,
        27524, 27449, 27373, 27296, 27219, 27142, 27064, 26985, 26907, 26828,
        26748, 26668, 26588, 26507, 26426, 26344, 26262, 26180, 26097, 26014,
        25931, 25847, 25763, 25678, 25593, 25508, 25422, 25336, 25250, 25163,
        25076, 24988, 24901, 24813, 24724, 24635, 24546, 24457, 24367, 24277,
        24187, 24096, 24005, 23914, 23822, 23730, 23638, 23546, 23453, 23360,
        23267, 23173, 23079, 22985, 22891, 22796, 22701, 22606, 22511, 22415,
        22320, 22223, 22127, 22031, 21934, 21837, 21740, 21642, 21545, 21447,
        21349, 21251, 21152, 21054, 20955, 20856, 20757, 20658, 20558, 20459,
        20359, 20259, 20159, 20058, 19958, 19858, 19757, 19656, 19555, 19454,
        19353, 19252, 19150, 19049, 18947, 18845, 18743, 18642, 18540, 18437,
        18335, 18233, 18131, 18028, 17926, 17823, 17721, 17618, 17515, 17413,
        17310, 17207, 17104, 17002, 16899, 16796, 16693, 16590, 16487, 16384,
        16281, 16178, 16075, 15972, 15869, 15766, 15664, 15561, 15458, 15355,
        15253, 15150, 15047, 14945, 14842, 14740, 14637, 14535, 14433, 14331,
        14228, 14126, 14025, 13923, 13821, 13719, 13618, 13516, 13415, 13314,
        13213, 13112, 13011, 12910, 12810, 12710, 12609, 12509, 12409, 12309,
        12210, 12110, 12011, 11912, 11813, 11714, 11616, 11517, 11419, 11321,
        11223, 11126, 11028, 10931, 10834, 10737, 10641, 10545, 10448, 10353,
        10257, 10162, 10067, 9972, 9877, 9783, 9689, 9595, 9501, 9408,
        9315, 9222, 9130, 9038, 8946, 8854, 8763, 8672, 8581, 8491,
        8401, 8311, 8222, 8133, 8044, 7955, 7867, 7780, 7692, 7605,
        7518, 7432, 7346, 7260, 7175, 7090, 7005, 6921, 6837, 6754,
        6671, 6588, 6506, 6424, 6342, 6261, 6180, 6100, 6020, 5940,
        5861, 5783, 5704, 5626, 5549, 5472, 5395, 5319, 5244, 5168,
        5094, 5019, 4945, 4872, 4799, 4726, 4654, 4582, 4511, 4441,
        4370, 4301, 4231, 4163, 4094, 4026, 3959, 3892, 3826, 3760,
        3695, 3630, 3565, 3501, 3438, 3375, 3313, 3251, 3190, 3129,
        3069, 3009, 2950, 2891, 2833, 2776, 2718, 2662, 2606, 2551,
        2496, 2441, 2388, 2334, 2282, 2229, 2178, 2127, 2076, 2027,
        1977, 1929, 1880, 1833, 1786, 1739, 1693, 1648, 1603, 1559,
        1516, 1473, 1430, 1389, 1348, 1307, 1267, 1228, 1189, 1151,
        1113, 1076, 1040, 1004, 969, 934, 900, 867, 834, 802,
        770, 739, 709, 680, 651, 622, 594, 567, 541, 515,
        489, 465, 441, 417, 395, 372, 351, 330, 310, 290,
        271, 253, 235, 218, 202, 186, 171, 156, 142, 129,
        117, 105, 93, 83, 73, 63, 55, 47, 39, 32,
        26, 21, 16, 12, 8, 5, 3, 1, 0,
};

/**
 * @brief Apply a Hanning sine function to a buffer of uint16_t's. Does this by mutliplying by
 * uint16_t's and storing the result as an uint32_t, which then gets right shifted to divide by
 * UINT16_T_MAX and convert back into an uint16.
 * @param[in] buf Pointer to buffer with buf_size elements. Will be modified in-place.
 * @param[in] buf_size Number of elements in buf. Must be equal to kNumHanningSteps.
*/
void ApplyHanningWindowUint16(uint16_t * buf, uint16_t buf_size) {
    if (buf_size != kNumHanningSteps) {
        // TODO: Could do some kind of fancy interpolation thing here in the future.
        printf("ApplyHanningWindow16: Error, expected buf of size %d but got buf of size %d.\r\n", kNumHanningSteps, buf_size);
        return;
    }

    for (uint16_t i = 0; i < buf_size; i++) {
        buf[i] = static_cast<uint16_t>((static_cast<uint32_t>(buf[i]) * static_cast<uint32_t>(kHanningTableUint16[i]))>>16);
    }
}