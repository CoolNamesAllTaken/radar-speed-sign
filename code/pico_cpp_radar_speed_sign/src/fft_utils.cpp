#include "fft_utils.hh"
#include "stdio.h" // for printing

const uint16_t kNumHanningSteps = 1000;
uint16_t kHanningTableInt16[kNumHanningSteps] = {
        0, 103, 206, 309, 412, 515, 618, 721, 823, 926, 1029,
        1132, 1235, 1338, 1441, 1544, 1646, 1749, 1852, 1955, 2058,
        2160, 2263, 2366, 2468, 2571, 2674, 2776, 2879, 2981, 3084,
        3186, 3289, 3391, 3493, 3596, 3698, 3800, 3903, 4005, 4107,
        4209, 4311, 4413, 4515, 4617, 4719, 4821, 4923, 5024, 5126,
        5228, 5329, 5431, 5532, 5634, 5735, 5836, 5938, 6039, 6140,
        6241, 6342, 6443, 6544, 6645, 6746, 6846, 6947, 7048, 7148,
        7249, 7349, 7449, 7549, 7650, 7750, 7850, 7949, 8049, 8149,
        8249, 8348, 8448, 8547, 8647, 8746, 8845, 8944, 9043, 9142,
        9241, 9340, 9438, 9537, 9635, 9733, 9832, 9930, 10028, 10126,
        10224, 10321, 10419, 10517, 10614, 10711, 10809, 10906, 11003, 11100,
        11197, 11293, 11390, 11486, 11583, 11679, 11775, 11871, 11967, 12063,
        12158, 12254, 12349, 12445, 12540, 12635, 12730, 12825, 12919, 13014,
        13108, 13202, 13297, 13391, 13485, 13578, 13672, 13765, 13859, 13952,
        14045, 14138, 14231, 14323, 14416, 14508, 14601, 14693, 14785, 14876,
        14968, 15060, 15151, 15242, 15333, 15424, 15515, 15605, 15696, 15786,
        15876, 15966, 16056, 16146, 16235, 16325, 16414, 16503, 16592, 16680,
        16769, 16857, 16945, 17033, 17121, 17209, 17296, 17384, 17471, 17558,
        17645, 17731, 17818, 17904, 17990, 18076, 18162, 18248, 18333, 18418,
        18503, 18588, 18673, 18757, 18842, 18926, 19010, 19094, 19177, 19261,
        19344, 19427, 19510, 19592, 19675, 19757, 19839, 19921, 20002, 20084,
        20165, 20246, 20327, 20408, 20488, 20568, 20648, 20728, 20808, 20887,
        20966, 21045, 21124, 21203, 21281, 21359, 21437, 21515, 21593, 21670,
        21747, 21824, 21901, 21977, 22053, 22129, 22205, 22281, 22356, 22431,
        22506, 22581, 22655, 22730, 22804, 22877, 22951, 23024, 23098, 23170,
        23243, 23316, 23388, 23460, 23532, 23603, 23674, 23745, 23816, 23887,
        23957, 24027, 24097, 24167, 24236, 24305, 24374, 24443, 24511, 24580,
        24648, 24715, 24783, 24850, 24917, 24984, 25050, 25116, 25182, 25248,
        25314, 25379, 25444, 25509, 25573, 25637, 25701, 25765, 25829, 25892,
        25955, 26017, 26080, 26142, 26204, 26266, 26327, 26388, 26449, 26510,
        26570, 26630, 26690, 26750, 26809, 26868, 26927, 26986, 27044, 27102,
        27160, 27217, 27274, 27331, 27388, 27444, 27500, 27556, 27612, 27667,
        27722, 27777, 27831, 27885, 27939, 27993, 28046, 28099, 28152, 28205,
        28257, 28309, 28361, 28412, 28463, 28514, 28565, 28615, 28665, 28715,
        28764, 28813, 28862, 28911, 28959, 29007, 29055, 29102, 29150, 29197,
        29243, 29289, 29335, 29381, 29427, 29472, 29517, 29561, 29605, 29649,
        29693, 29736, 29780, 29822, 29865, 29907, 29949, 29991, 30032, 30073,
        30114, 30154, 30194, 30234, 30274, 30313, 30352, 30391, 30429, 30467,
        30505, 30542, 30579, 30616, 30653, 30689, 30725, 30760, 30796, 30831,
        30865, 30900, 30934, 30968, 31001, 31035, 31067, 31100, 31132, 31164,
        31196, 31227, 31258, 31289, 31319, 31350, 31379, 31409, 31438, 31467,
        31495, 31524, 31552, 31579, 31607, 31634, 31660, 31687, 31713, 31739,
        31764, 31789, 31814, 31838, 31863, 31886, 31910, 31933, 31956, 31979,
        32001, 32023, 32045, 32066, 32087, 32108, 32128, 32148, 32168, 32188,
        32207, 32226, 32244, 32262, 32280, 32298, 32315, 32332, 32348, 32365,
        32381, 32396, 32411, 32426, 32441, 32455, 32469, 32483, 32497, 32510,
        32522, 32535, 32547, 32559, 32570, 32581, 32592, 32603, 32613, 32623,
        32632, 32641, 32650, 32659, 32667, 32675, 32682, 32690, 32697, 32703,
        32710, 32716, 32721, 32727, 32732, 32736, 32741, 32745, 32748, 32752,
        32755, 32758, 32760, 32762, 32764, 32765, 32767, 32767, 32768, 32768,
        32768, 32767, 32767, 32765, 32764, 32762, 32760, 32758, 32755, 32752,
        32748, 32745, 32741, 32736, 32732, 32727, 32721, 32716, 32710, 32703,
        32697, 32690, 32682, 32675, 32667, 32659, 32650, 32641, 32632, 32623,
        32613, 32603, 32592, 32581, 32570, 32559, 32547, 32535, 32522, 32510,
        32497, 32483, 32469, 32455, 32441, 32426, 32411, 32396, 32381, 32365,
        32348, 32332, 32315, 32298, 32280, 32262, 32244, 32226, 32207, 32188,
        32168, 32148, 32128, 32108, 32087, 32066, 32045, 32023, 32001, 31979,
        31956, 31933, 31910, 31886, 31863, 31838, 31814, 31789, 31764, 31739,
        31713, 31687, 31660, 31634, 31607, 31579, 31552, 31524, 31495, 31467,
        31438, 31409, 31379, 31350, 31319, 31289, 31258, 31227, 31196, 31164,
        31132, 31100, 31067, 31035, 31001, 30968, 30934, 30900, 30865, 30831,
        30796, 30760, 30725, 30689, 30653, 30616, 30579, 30542, 30505, 30467,
        30429, 30391, 30352, 30313, 30274, 30234, 30194, 30154, 30114, 30073,
        30032, 29991, 29949, 29907, 29865, 29822, 29780, 29736, 29693, 29649,
        29605, 29561, 29517, 29472, 29427, 29381, 29335, 29289, 29243, 29197,
        29150, 29102, 29055, 29007, 28959, 28911, 28862, 28813, 28764, 28715,
        28665, 28615, 28565, 28514, 28463, 28412, 28361, 28309, 28257, 28205,
        28152, 28099, 28046, 27993, 27939, 27885, 27831, 27777, 27722, 27667,
        27612, 27556, 27500, 27444, 27388, 27331, 27274, 27217, 27160, 27102,
        27044, 26986, 26927, 26868, 26809, 26750, 26690, 26630, 26570, 26510,
        26449, 26388, 26327, 26266, 26204, 26142, 26080, 26017, 25955, 25892,
        25829, 25765, 25701, 25637, 25573, 25509, 25444, 25379, 25314, 25248,
        25182, 25116, 25050, 24984, 24917, 24850, 24783, 24715, 24648, 24580,
        24511, 24443, 24374, 24305, 24236, 24167, 24097, 24027, 23957, 23887,
        23816, 23745, 23674, 23603, 23532, 23460, 23388, 23316, 23243, 23170,
        23098, 23024, 22951, 22877, 22804, 22730, 22655, 22581, 22506, 22431,
        22356, 22281, 22205, 22129, 22053, 21977, 21901, 21824, 21747, 21670,
        21593, 21515, 21437, 21359, 21281, 21203, 21124, 21045, 20966, 20887,
        20808, 20728, 20648, 20568, 20488, 20408, 20327, 20246, 20165, 20084,
        20002, 19921, 19839, 19757, 19675, 19592, 19510, 19427, 19344, 19261,
        19177, 19094, 19010, 18926, 18842, 18757, 18673, 18588, 18503, 18418,
        18333, 18248, 18162, 18076, 17990, 17904, 17818, 17731, 17645, 17558,
        17471, 17384, 17296, 17209, 17121, 17033, 16945, 16857, 16769, 16680,
        16592, 16503, 16414, 16325, 16235, 16146, 16056, 15966, 15876, 15786,
        15696, 15605, 15515, 15424, 15333, 15242, 15151, 15060, 14968, 14876,
        14785, 14693, 14601, 14508, 14416, 14323, 14231, 14138, 14045, 13952,
        13859, 13765, 13672, 13578, 13485, 13391, 13297, 13202, 13108, 13014,
        12919, 12825, 12730, 12635, 12540, 12445, 12349, 12254, 12158, 12063,
        11967, 11871, 11775, 11679, 11583, 11486, 11390, 11293, 11197, 11100,
        11003, 10906, 10809, 10711, 10614, 10517, 10419, 10321, 10224, 10126,
        10028, 9930, 9832, 9733, 9635, 9537, 9438, 9340, 9241, 9142,
        9043, 8944, 8845, 8746, 8647, 8547, 8448, 8348, 8249, 8149,
        8049, 7949, 7850, 7750, 7650, 7549, 7449, 7349, 7249, 7148,
        7048, 6947, 6846, 6746, 6645, 6544, 6443, 6342, 6241, 6140,
        6039, 5938, 5836, 5735, 5634, 5532, 5431, 5329, 5228, 5126,
        5024, 4923, 4821, 4719, 4617, 4515, 4413, 4311, 4209, 4107,
        4005, 3903, 3800, 3698, 3596, 3493, 3391, 3289, 3186, 3084,
        2981, 2879, 2776, 2674, 2571, 2468, 2366, 2263, 2160, 2058,
        1955, 1852, 1749, 1646, 1544, 1441, 1338, 1235, 1132, 1029,
        926, 823, 721, 618, 515, 412, 309, 206, 103,
};

/**
 * @brief Apply a Hanning sine function to a buffer of uint16_t's. Does this by mutliplying by
 * uint16_t's and storing the result as an uint32_t, which then gets right shifted to divide by
 * UINT16_T_MAX and convert back into an uint16.
 * @param[in] buf Pointer to buffer with buf_size elements. Will be modified in-place.
 * @param[in] buf_size Number of elements in buf. Must be equal to kNumHanningSteps.
*/
void ApplyHanningWindowUint16(uint16_t * buf, uint16_t buf_size) {
    if (buf_size != kNumHanningSteps) {
        // TODO: Could do some kind of fancy interpolation thing here in the future.
        printf("ApplyHanningWindow16: Error, expected buf of size %d but got buf of size %d.\r\n", kNumHanningSteps, buf_size);
        return;
    }

    for (uint16_t i = 0; i < buf_size; i++) {
        buf[i] = static_cast<uint16_t>((static_cast<uint32_t>(buf[i]) * static_cast<uint32_t>(kHanningTableInt16[i]))>>16);
    }
}